{
    "name": "cpp-live",
    "version": "1.0.2",
    "publisher": "segfault-survivor",
    "engines": {
        "vscode": "^1.98.0"
    },
    "license": "BSL-1.0",
    "displayName": "C++Live",
    "description": "Live C++ experience powered by Cut!",
    "categories": [
        "Programming Languages"
    ],
    "keywords": [
        "C++",
        "Cpp",
        "Live",
        "clang",
        "msvc"
    ],
    "main": "./dist/extension.js",
    "contributes": {
        "configuration": {
            "title": "cpp-live",
            "properties": {
                "cpp-live.enable": {
                    "type": "boolean",
                    "default": true,
                    "description": "Turn C++Live on or off"
                },
                "cpp-live.maxLines": {
                    "type": "integer",
                    "default": 1000,
                    "description": "Maximum number of lines in C++Live Output window. Zero means no limit."
                },
                "cpp-live.printTimestamp": {
                    "type": "boolean",
                    "default": false,
                    "description": "Print timestamp in C++Live Output window"
                },
                "cpp-live.debounce": {
                    "type": "integer",
                    "default": 300,
                    "description": "Time between keystroke and start of compilation in milliseconds."
                },
                "cpp-live.jobify": {
                    "type": "boolean",
                    "default": true,
                    "description": "Start the build process and its subprocesses in a single job (see ::CreateJobObject for details)."
                }
            }
        },
        "commands": [
            {
                "command": "cpp-live.Toggle",
                "title": "C++Live: Toggle automatic compilation"
            },
            {
                "command": "cpp-live.open_example",
                "title": "C++Live: Open example project"
            },
            {
                "command": "cpp-live.bug_vscode_82750_step_1",
                "title": "Reproduce VSCode bug 82750, step 1"
            },
            {
                "command": "cpp-live.bug_vscode_82750_step_2",
                "title": "Reproduce VSCode bug 82750, step 2"
            }
        ],
        "walkthroughs": [
            {
                "id": "welcome",
                "title": "Get Started With C++Live",
                "description": "C++Live is looking for **c++live.bat** (or **c++live.sh**) near C++ source file you edit, this is all you need to use this extension.\nThere is **example/c++live.bat** with following requirements:",
                "steps": [
                    {
                        "id": "check-git",
                        "title": "Git",
                        "description": "**example/c++live.bat** will checkout [Cut!](https://github.com/segfault-survivor/cut) to speed up C++ compilation\n[Install Git](https://aka.ms/vscode-install-git)",
                        "completionEvents": [
                            "onContext:cpp-live.check-git"
                        ],
                        "media": {
                            "image": "img/check-git.svg",
                            "altText": "On Windows: winget install Git.Git"
                        }
                    },
                    {
                        "id": "check-msvc",
                        "title": "Microsoft Visual Studio",
                        "description": "**example/c++live.bat** uses Visual Studio for compilation\n[Browse](https://visualstudio.microsoft.com)",
                        "when": "isWindows",
                        "completionEvents": [
                            "onContext:cpp-live.check-msvc"
                        ],
                        "media": {
                            "image": "img/check-msvc.svg",
                            "altText": ""
                        }
                    },
                    {
                        "id": "check-llvm",
                        "title": "LLVM",
                        "description": "Clang is required by Cut!\n[Browse](https://llvm.org)",
                        "completionEvents": [
                            "onContext:cpp-live.check-llvm"
                        ],
                        "media": {
                            "image": "img/check-llvm.svg",
                            "altText": "On Windows: winget install LLVM.LLVM"
                        }
                    },
                    {
                        "id": "open-example",
                        "title": "Open example",
                        "description": "The example will be opened in a new window if current workspace is not empty\n[Open](command:cpp-live.open_example)",
                        "completionEvents": [
                            "onCommand:cpp-live.open_example"
                        ],
                        "media": {
                            "image": "img/status.svg",
                            "altText": "C++Live example project"
                        }
                    }
                ]
            }
        ]
    },
    "activationEvents": [
        "onLanguage:cpp"
    ],
    "dependencies": {
        "tree-kill": "^1.2.2"
    },
    "devDependencies": {
        "@types/mocha": "^10.0.10",
        "@types/node": "20.x",
        "@types/vscode": "^1.98.0",
        "@typescript-eslint/eslint-plugin": "^8.17.0",
        "@typescript-eslint/parser": "^8.17.0",
        "@vscode/test-cli": "^0.0.10",
        "@vscode/test-electron": "^2.4.1",
        "esbuild": "^0.25.1",
        "eslint": "^9.16.0",
        "npm-run-all": "^4.1.5",
        "tree-kill": "^1.2.2",
        "typescript": "^5.7.2"
    },
    "scripts": {
        "vscode:prepublish": "npm run package",
        "compile": "npm run check-types && npm run lint && node esbuild.js",
        "watch": "npm-run-all -p watch:*",
        "watch:esbuild": "node esbuild.js --watch",
        "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
        "package": "npm run check-types && npm run lint && node esbuild.js --production",
        "compile-tests": "tsc -p . --outDir out",
        "watch-tests": "tsc -p . -w --outDir out",
        "pretest": "npm run compile-tests && npm run compile && npm run lint",
        "check-types": "tsc --noEmit",
        "lint": "eslint src",
        "test": "vscode-test"
    },
    "icon": "img/logo.png",
    "author": {
        "name": "segfault-survivor",
        "email": "segfault-survivor@gmail.com"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/segfault-survivor/vscode-cpp-live.git"
    },
    "homepage": "https://github.com/segfault-survivor/vscode-cpp-live.git"
}